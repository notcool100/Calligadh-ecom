trigger:
  branches:
    include:
      - dev

pool:
  name: 'Astro'

variables:
  nodeVersion: '24.x'

stages:
- stage: BuildFrontend 
  displayName: 'Build Frontend'
  jobs:
  - job: BuildFrontendJob
    displayName: 'Build Next.js Frontend'
    steps:
    - checkout: self
      displayName: 'Checkout Code'
    
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Install Node.js'
    
    - task: DownloadSecureFile@1
      name: FrontendEnv
      inputs:
        secureFile: 'envex'
      displayName: 'Download Frontend Environment File'
    
    - script: |
        cp $(FrontendEnv.secureFilePath) .env
        echo "Frontend environment file copied successfully"
      displayName: 'Setup Frontend Environment'
    
    - script: |
        echo "Installing frontend dependencies"
        npm install --legacy-peer-deps
      displayName: 'Install Frontend Dependencies'
    
    - script: |
        echo "Building frontend application (includes Prisma generate)"
        npm run build
      displayName: 'Build Frontend Application'
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'tar'
        tarCompression: 'gz'
        archiveFile: '$(Build.ArtifactStagingDirectory)/calligadh-frontend.tar.gz'
        replaceExistingArchive: true
      displayName: 'Archive Frontend Files'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/calligadh-frontend.tar.gz'
        ArtifactName: 'frontend'
        publishLocation: 'Container'
      displayName: 'Publish Frontend Artifact'

- stage: BuildBackend 
  displayName: 'Build Backend'
  dependsOn: BuildFrontend
  jobs:
  - job: BuildBackendJob
    displayName: 'Build Node.js Backend'
    steps:
    - checkout: self
      displayName: 'Checkout Code'
    
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Install Node.js'
    
    - task: DownloadSecureFile@1
      name: BackendEnv
      inputs:
        secureFile: 'envex'
      displayName: 'Download Backend Environment File'
    
    - script: |
        cd server
        cp $(BackendEnv.secureFilePath) .env
        echo "Backend environment file copied successfully"
      displayName: 'Setup Backend Environment'
    
    - script: |
        cd server
        echo "Installing backend dependencies"
        npm install --legacy-peer-deps
      displayName: 'Install Backend Dependencies'
    
    - script: |
        cd server
        echo "Generating Prisma client for backend"
        npx prisma generate
      displayName: 'Generate Prisma Client'
    
    - script: |
        cd server
        echo "Backend installation completed. Server structure:"
        ls -la
        echo -e "\nBackend ready to run with: npm start"
      displayName: 'Verify Backend Installation'
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/server'
        includeRootFolder: false
        archiveType: 'tar'
        tarCompression: 'gz'
        archiveFile: '$(Build.ArtifactStagingDirectory)/calligadh-backend.tar.gz'
        replaceExistingArchive: true
      displayName: 'Archive Backend Files'
    
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/calligadh-backend.tar.gz'
        ArtifactName: 'backend'
        publishLocation: 'Container'
      displayName: 'Publish Backend Artifact'